{"ast":null,"code":"var _class;\nimport { User } from '../models/user.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n    this.users = [];\n    this.users = [new User(0, 'John Doe', 1000), new User(1, 'Jane Smith', 500), new User(2, 'Engy', 6700), new User(3, 'amany', 12000), new User(4, 'bonbon', 300000)];\n  }\n  getUsers() {\n    return this.users;\n  }\n  setUsers(users) {\n    this.users = users;\n  }\n  getUsersFromDB() {\n    return this.http.get(`${this.apiUrl}/users`);\n  }\n}\n_class = UserService;\n_class.ɵfac = function UserService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["User","UserService","constructor","http","apiUrl","users","getUsers","setUsers","getUsersFromDB","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Hi\\Desktop\\botit\\admin-wallet-app\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private apiUrl = 'http://localhost:3000';\r\n  private users: User[] = [];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.users = [\r\n      new User(0, 'John Doe', 1000),\r\n      new User(1, 'Jane Smith', 500),\r\n      new User(2, 'Engy', 6700),\r\n      new User(3, 'amany', 12000),\r\n      new User(4, 'bonbon', 300000),\r\n\r\n    ]\r\n   }\r\n\r\n   getUsers(): User[] {\r\n    return this.users;\r\n  }\r\n  setUsers(users: User[]): void {\r\n    this.users = users;\r\n  }\r\n  getUsersFromDB(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.apiUrl}/users`);\r\n  }\r\n}\r\n"],"mappings":";AAGA,SAASA,IAAI,QAAQ,sBAAsB;;;AAK3C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,uBAAuB;IAChC,KAAAC,KAAK,GAAW,EAAE;IAGxB,IAAI,CAACA,KAAK,GAAG,CACX,IAAIL,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,EAC7B,IAAIA,IAAI,CAAC,CAAC,EAAE,YAAY,EAAE,GAAG,CAAC,EAC9B,IAAIA,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EACzB,IAAIA,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,EAC3B,IAAIA,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,MAAM,CAAC,CAE9B;EACF;EAEAM,QAAQA,CAAA;IACP,OAAO,IAAI,CAACD,KAAK;EACnB;EACAE,QAAQA,CAACF,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EACAG,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAS,GAAG,IAAI,CAACL,MAAM,QAAQ,CAAC;EACtD;;SAvBWH,WAAW;;mBAAXA,MAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXZ,MAAW;EAAAa,OAAA,EAAXb,MAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}