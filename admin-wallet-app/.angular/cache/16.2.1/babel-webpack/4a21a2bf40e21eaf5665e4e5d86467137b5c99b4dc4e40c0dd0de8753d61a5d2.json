{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WalletService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/users';\n  }\n  adjustBalance(userId, amount, adjustType) {\n    const requestBody = {\n      \"amount\": amount,\n      \"type\": adjustType\n    };\n    return this.http.post(`${this.apiUrl}/${userId}/adjust-balance`, requestBody);\n  }\n  getTransactionHistory(userId, startDate, endDate) {\n    return this.http.get(`${this.apiUrl}/${userId}/transactions`);\n  }\n}\n_class = WalletService;\n_class.ɵfac = function WalletService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["WalletService","constructor","http","apiUrl","adjustBalance","userId","amount","adjustType","requestBody","post","getTransactionHistory","startDate","endDate","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Hi\\Desktop\\botit\\admin-wallet-app\\src\\app\\services\\wallet.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Transaction } from '../models/transaction.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WalletService {\r\n  private apiUrl = 'http://localhost:3000/users';\r\n\r\n  constructor(private http: HttpClient) {  \r\n  }\r\n  adjustBalance(userId: string, amount: number, adjustType: 'withdrawal' | 'deposit'): Observable<any> {\r\n    const requestBody = { \"amount\": amount, \"type\": adjustType };\r\n    return this.http.post<any>(`${this.apiUrl}/${userId}/adjust-balance`, requestBody);\r\n  }\r\n\r\n  getTransactionHistory(userId: string, startDate:string , endDate:string): Observable<Transaction[]> {\r\n    return this.http.get<Transaction[]>(`${this.apiUrl}/${userId}/transactions`);\r\n  }\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,6BAA6B;EAG9C;EACAC,aAAaA,CAACC,MAAc,EAAEC,MAAc,EAAEC,UAAoC;IAChF,MAAMC,WAAW,GAAG;MAAE,QAAQ,EAAEF,MAAM;MAAE,MAAM,EAAEC;IAAU,CAAE;IAC5D,OAAO,IAAI,CAACL,IAAI,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,MAAM,IAAIE,MAAM,iBAAiB,EAAEG,WAAW,CAAC;EACpF;EAEAE,qBAAqBA,CAACL,MAAc,EAAEM,SAAgB,EAAGC,OAAc;IACrE,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAgB,GAAG,IAAI,CAACV,MAAM,IAAIE,MAAM,eAAe,CAAC;EAC9E;;SAZWL,aAAa;;mBAAbA,MAAa,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAbjB,MAAa;EAAAkB,OAAA,EAAblB,MAAa,CAAAmB,IAAA;EAAAC,UAAA,EAFZ;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}