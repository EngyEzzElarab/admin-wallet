{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TransactionHistoryComponent = class TransactionHistoryComponent {\n  constructor(userService, walletService) {\n    this.userService = userService;\n    this.walletService = walletService;\n    this.users = [];\n    this.selectedUser = '';\n    this.transactions = [];\n    this.startDate = '2023-09-01';\n    this.endDate = '2023-09-15';\n  }\n  ngOnInit() {\n    this.userService.getUsersFromDB().subscribe(data => {\n      this.users = data;\n    }, error => {\n      console.error('Error while getting the users from db:', error);\n    });\n    // this.users = this.userService.getUsers();\n    // this.userService.getUsers().subscribe(users => {\n    //   this.users = users;\n    // });\n  }\n\n  viewTransactionHistory() {\n    // console.log(this.selectedUser)\n    // console.log(this.startDate)\n    // console.log(this.endDate)\n    this.walletService.getTransactionHistory(this.selectedUser, this.startDate, this.endDate).subscribe(data => {\n      this.transactions = data;\n    }, error => {\n      console.error('Error while getting the users from db:', error);\n    });\n    // this.transactions.forEach((transaction) => {\n    //   console.log(transaction.timestamp)\n    //     console.log( transaction.timestamp >= this.startDate && transaction.timestamp <= this.endDate)\n    // });\n    // this.walletService.getTransactionHistory(this.selectedUser).subscribe((transactions: Transaction[]) => {\n    //   this.transactions = transactions;\n    // });\n  }\n};\n\nTransactionHistoryComponent = __decorate([Component({\n  selector: 'app-transaction-history',\n  templateUrl: './transaction-history.component.html',\n  styleUrls: ['./transaction-history.component.css']\n})], TransactionHistoryComponent);","map":{"version":3,"names":["Component","TransactionHistoryComponent","constructor","userService","walletService","users","selectedUser","transactions","startDate","endDate","ngOnInit","getUsersFromDB","subscribe","data","error","console","viewTransactionHistory","getTransactionHistory","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Hi\\Desktop\\botit\\admin-wallet-app\\src\\app\\transaction-history\\transaction-history.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\nimport { WalletService } from '../services/wallet.service';\nimport { DatePipe } from '@angular/common';\nimport { User } from '../models/user.model'; \nimport { Transaction } from '../models/transaction.model';\n@Component({\n  selector: 'app-transaction-history',\n  templateUrl: './transaction-history.component.html',\n  styleUrls: ['./transaction-history.component.css']\n})\nexport class TransactionHistoryComponent implements OnInit {\n  users: User[] = [];\n  selectedUser:string = '';\n  transactions: Transaction[] = [];\n  startDate:string ='2023-09-01';\n  endDate:string = '2023-09-15';\n\n  constructor(\n    private userService: UserService,\n    private walletService: WalletService\n  ) { }\n\n  ngOnInit(): void {\n    this.userService.getUsersFromDB()\n    .subscribe(\n      (data: User[]) => {\n        this.users = data; \n      },\n      (error) => {\n        console.error('Error while getting the users from db:', error);\n      }\n    );\n    // this.users = this.userService.getUsers();\n    // this.userService.getUsers().subscribe(users => {\n    //   this.users = users;\n    // });\n  }\n\n  viewTransactionHistory(): void {\n    // console.log(this.selectedUser)\n    // console.log(this.startDate)\n    // console.log(this.endDate)\n    this.walletService.getTransactionHistory(this.selectedUser, this.startDate, this.endDate)\n    .subscribe(\n      (data: Transaction[]) => {\n        this.transactions = data; \n      },\n      (error) => {\n        console.error('Error while getting the users from db:', error);\n      }\n    );\n    \n    // this.transactions.forEach((transaction) => {\n    //   console.log(transaction.timestamp)\n    //     console.log( transaction.timestamp >= this.startDate && transaction.timestamp <= this.endDate)\n    // });\n    // this.walletService.getTransactionHistory(this.selectedUser).subscribe((transactions: Transaction[]) => {\n    //   this.transactions = transactions;\n    // });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EAOtCC,YACUC,WAAwB,EACxBC,aAA4B;IAD5B,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,aAAa,GAAbA,aAAa;IARvB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,YAAY,GAAkB,EAAE;IAChC,KAAAC,SAAS,GAAS,YAAY;IAC9B,KAAAC,OAAO,GAAU,YAAY;EAKzB;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACP,WAAW,CAACQ,cAAc,EAAE,CAChCC,SAAS,CACPC,IAAY,IAAI;MACf,IAAI,CAACR,KAAK,GAAGQ,IAAI;IACnB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CACF;IACD;IACA;IACA;IACA;EACF;;EAEAE,sBAAsBA,CAAA;IACpB;IACA;IACA;IACA,IAAI,CAACZ,aAAa,CAACa,qBAAqB,CAAC,IAAI,CAACX,YAAY,EAAE,IAAI,CAACE,SAAS,EAAE,IAAI,CAACC,OAAO,CAAC,CACxFG,SAAS,CACPC,IAAmB,IAAI;MACtB,IAAI,CAACN,YAAY,GAAGM,IAAI;IAC1B,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;IAChE,CAAC,CACF;IAED;IACA;IACA;IACA;IACA;IACA;IACA;EACF;CACD;;AAlDYb,2BAA2B,GAAAiB,UAAA,EALvClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,yBAAyB;EACnCC,WAAW,EAAE,sCAAsC;EACnDC,SAAS,EAAE,CAAC,qCAAqC;CAClD,CAAC,C,EACWpB,2BAA2B,CAkDvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}